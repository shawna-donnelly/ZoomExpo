apply plugin: 'com.android.library'

group = 'expo.modules.zoommodule'
version = '0.1.0'

def expoModulesCorePlugin = new File(project(":expo-modules-core").projectDir.absolutePath, "ExpoModulesCorePlugin.gradle")
apply from: expoModulesCorePlugin
applyKotlinExpoModulesCorePlugin()
useCoreDependencies()
useExpoPublishing()

// If you want to use the managed Android SDK versions from expo-modules-core, set this to true.
// The Android SDK versions will be bumped from time to time in SDK releases and may introduce breaking changes in your module code.
// Most of the time, you may like to manage the Android SDK versions yourself.
def useManagedAndroidSdkVersions = false
if (useManagedAndroidSdkVersions) {
  useDefaultAndroidSdkVersions()
} else {
  buildscript {
    // Simple helper that allows the root project to override versions declared by this library.
    ext.safeExtGet = { prop, fallback ->
      rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
    }
  }
  project.android {
    compileSdkVersion safeExtGet("compileSdkVersion", 34)
    defaultConfig {
      minSdkVersion safeExtGet("minSdkVersion", 21)
      targetSdkVersion safeExtGet("targetSdkVersion", 34)
    }
  }
}

repositories {
  google()
  mavenCentral()
  flatDir {
    dirs 'libs'
  }
}

dependencies {
    //api 'com.anonymous.expozoom:mobilertc:v6.0.2.21328'
    compileOnly fileTree(dir: 'libs', include: ['*.aar'])
    implementation "androidx.security:security-crypto:1.1.0-alpha05"
    implementation "com.google.crypto.tink:tink-android:1.7.0"
    implementation "com.google.android.exoplayer:exoplayer-core:2.17.1"
    implementation "com.google.android.exoplayer:exoplayer-ui:2.17.1"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"

    implementation "androidx.appcompat:appcompat:1.3.1"
    implementation "androidx.constraintlayout:constraintlayout:2.1.0"
    implementation "com.google.android.material:material:1.8.0"
    implementation "androidx.multidex:multidex:2.0.1"
    implementation "com.google.code.gson:gson:2.9.1"
    implementation "com.github.bumptech.glide:annotations:4.11.0"
    implementation "com.github.bumptech.glide:glide:4.11.0"
    implementation "org.greenrobot:eventbus:3.1.1"

    implementation "androidx.recyclerview:recyclerview:1.2.1"
    implementation "com.airbnb.android:lottie:4.0.0"

    implementation "androidx.window:window:1.0.0"

    implementation "androidx.window:window-java:1.0.0"

    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.8.20"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.20"

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.2"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.2"
    implementation "androidx.core:core-ktx:1.8.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.1"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.6.1"

    implementation "androidx.fragment:fragment-ktx:1.4.1"
    implementation "io.reactivex.rxjava2:rxandroid:2.1.1"
    implementation "org.greenrobot:eventbus:3.1.1"
    implementation "com.davemorrissey.labs:subsampling-scale-image-view:3.10.0"
    implementation "androidx.core:core-splashscreen:1.0.1"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.6.1"
    implementation "androidx.databinding:viewbinding:7.1.2"
    implementation "io.reactivex.rxjava3:rxandroid:3.0.2"

    implementation "androidx.compose.material3:material3:1.1.1"
    implementation "androidx.compose.ui:ui-tooling-preview:1.4.1"
    implementation "androidx.constraintlayout:constraintlayout-compose:1.0.1"
    implementation "androidx.activity:activity-compose:1.6.1"
    implementation "androidx.lifecycle:lifecycle-runtime-compose:2.6.1"
    implementation "androidx.navigation:navigation-compose:2.6.0"
    implementation "io.coil-kt:coil-compose:2.3.0"
    //api 'com.anonymous.expozoom:mobilertc:v6.0.2.21328'
}

android {
  namespace "expo.modules.zoommodule"
  defaultConfig {
    versionCode 1
    versionName "0.1.0"
  }
  lintOptions {
    abortOnError false
  }
}
